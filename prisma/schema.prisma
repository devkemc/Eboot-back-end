// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pessoa {
  pes_id             Int        @id @default(autoincrement())
  pes_nome           String     @db.VarChar(100)
  pes_sobrenome      String     @db.VarChar(100)
  pes_dataNascimento DateTime   @default(now()) @db.Date
  pes_genero         String     @db.VarChar(20)
  pes_cpf            String     @unique
  pes_isActive       Boolean
  pes_createdAt      DateTime   @default(now())
  pes_updateAt       DateTime   @updatedAt
  pes_tipo           TipoPessoa
  usuario            Usuario @relation(fields: [usuario_id], references: [user_id])
  usuario_id         Int @unique
  ranking            Float?
  cartao             Cartao[]
  endereco           Endereco[]
  telefone           Telefone[]
}

enum TipoPessoa {
  CLIENTE
  ADMINISTRADOR
}

model Usuario {
  user_id    Int     @id @default(autoincrement())
  user_email String  @unique @db.VarChar(100)
  user_senha String  @db.VarChar(255)
  user_admin Boolean
  pessoa    Pessoa? 
}

model Cartao {
  crt_id            Int            @id @default(autoincrement())
  crt_bandeira      BandeiraCartao
  crt_numero_cartao Float
  crt_nome_impresso String         @db.VarChar(100)
  crt_cod_seguranca Int
  pessoa            Pessoa?        @relation(fields: [pessoa_id], references: [pes_id])
  pessoa_id         Int?
}

enum BandeiraCartao {
  VISA
  MASTERCARD
  ELO
}

model Telefone {
  tel_id     Int          @id @default(autoincrement())
  tel_tipo   TipoTelefone
  tel_ddd    Int
  tel_numero Int
  pessoa     Pessoa?      @relation(fields: [pessoa_id], references: [pes_id])
  pessoa_id  Int?
}

enum TipoTelefone {
  CELULAR
  FIXO
}

model Endereco {
  end_id              Int            @id @default(autoincrement())
  end_tipo_imovel     TipoImovel
  end_tipo_endereco   TipoEndereco
  end_tipo_logradouro TipoLogradouro
  end_logradouro      String
  end_numero          String
  end_bairro          String
  end_cep             Int
  pessoa              Pessoa         @relation(fields: [pessoa_id], references: [pes_id])
  pessoa_id           Int
  cidade              Cidade         @relation(fields: [cidade_id], references: [cid_id])
  cidade_id           Int
}

enum TipoImovel {
  COMERCIAL
  RESIDENCIAL
}

enum TipoEndereco {
  COBRANCA
  ENTREGA
}

enum TipoLogradouro {
  RUA
  AVENIDA
  PRACA
  ESTRADA
}

model Cidade {
  cid_id    Int        @id @default(autoincrement())
  cid_nome  String
  endereco  Endereco[]
  estado    Estado     @relation(fields: [estado_id], references: [est_id])
  estado_id Int
}

model Estado {
  est_id   Int      @id @default(autoincrement())
  est_nome String
  cidade   Cidade[]
}
